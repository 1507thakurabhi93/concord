concord-server {

    # API port
    port = 8001

    db {
        url = "jdbc:postgresql://localhost:5432/postgres"
        url = ${?DB_URL}

        appUsername = "postgres"
        appUsername = ${?DB_USERNAME}

        appPassword = "q1"
        appPassword= ${?DB_PASSWORD}

        inventoryUsername = "inventory"
        inventoryUsername = ${?DB_INVENTORY_USERNAME}

        inventoryPassword = "q1"
        inventoryPassword = ${?DB_INVENTORY_PASSWORD}

        maxPoolSize = 10
    }

    process {
        # default process variables
        defaultVariables = null

        # max age of the process state data (ms)
        maxStateAge = 604800000

        # max age of failed processes to handle (PG interval)
        maxFailureHandlingAge = "3 days"

        # max age of stalled processes to handle (PG interval)
        maxStalledAge = "1 minute"

        # max age of processes which are failed to start (PG interval)
        maxStartFailureAge = "10 minutes"
    }

    repositoryCache {
        # directory to store the local repo cache
        # created automatically if not specified
        # cacheDir = "/tmp/concord/repos"

        # directory to store the local repo cache metadata
        # created automatically if not specified
        # metaDir = "/tmp/concord/repo_meta"

        # check if concord.yml is present in the repo
        concordFileValidationEnabled = false
    }

    template {
        # directory to store process template cache
        # created automatically if not specified
        # cacheDir = "/tmp/concord/templates"
    }

    secretStore {
        default = concord

        maxSecretDataSize = 1048576

        # default values, change for production
        serverPassword = "cTFxMXExcTE="
        secretStoreSalt = "SCk4KmBlazMi"
        projectSecretSalt = "I34xCmcOCwVv"

        concord {
            enabled = true
        }

        keywhiz {
            enabled = false
            url = "https://localhost:4444"
            trustStore = "/path/to/trustStore.p12"
            trustStorePassword = "..."
            keyStore = "/path/to/keystore.p12"
            keyStorePassword = "..."
            connectTimeout = 5000
            soTimeout = 5000
            connectionRequestTimeout = 5000
        }
    }

    # AD/LDAP authentication
    ldap {
        url = "ldap://oldap:389"
        searchBase = "dc=example,dc=org"
        principalSearchFilter = "(cn={0})"
        userSearchFilter = "(cn=*{0}*)"
        usernameProperty = "cn"
        systemUsername = "cn=admin,dc=example,dc=org"
        systemPassword = "..."
    }

    # GitHub integration
    github {
        enabled = false

        githubUrl = "github.com"
        apiUrl = "https://github.com/api/v3"
        secret = "..."
        oauthAccessToken = "..."

        # webhook endpoint
        webhookUrl = "http://localhost:8001/events/github/push"

        # webhook refresh interval (ms)
        refreshInterval = 60000

        # use webhooks to refresh the repo cache
        cacheEnabled = false

        # use JGit instead of Git CLI
        useJGit = false
    }

    development {
    }

    production {
    }
}