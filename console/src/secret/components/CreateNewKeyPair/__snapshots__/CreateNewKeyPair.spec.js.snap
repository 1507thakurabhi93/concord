// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateNewKeyPair should match snapshots for various states of success and error 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Connect(Form(CreateNewKeyPair))
    destroyOnUnmount={true}
    enableReinitialize={false}
    error={true}
    forceUnregisterOnUnmount={false}
    form="CreateNewKeyPair"
    getFormState={[Function]}
    initialValues={undefined}
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldValidate={[Function]}
    success={true}
    touchOnBlur={true}
    touchOnChange={false}
  />,
  "nodes": Array [
    <Connect(Form(CreateNewKeyPair))
      destroyOnUnmount={true}
      enableReinitialize={false}
      error={true}
      forceUnregisterOnUnmount={false}
      form="CreateNewKeyPair"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      success={true}
      touchOnBlur={true}
      touchOnChange={false}
    />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ReduxForm
        error={true}
        success={true}
      />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ReduxForm {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "error": true,
          "success": true,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Connect(Form(CreateNewKeyPair))
          destroyOnUnmount={true}
          enableReinitialize={false}
          error={true}
          forceUnregisterOnUnmount={false}
          form="CreateNewKeyPair"
          getFormState={[Function]}
          initialValues={undefined}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pure={true}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          success={true}
          touchOnBlur={true}
          touchOnChange={false}
        />,
        "_debugID": 4,
        "_renderedOutput": <Connect(Form(CreateNewKeyPair))
          destroyOnUnmount={true}
          enableReinitialize={false}
          error={true}
          forceUnregisterOnUnmount={false}
          form="CreateNewKeyPair"
          getFormState={[Function]}
          initialValues={undefined}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pure={true}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          success={true}
          touchOnBlur={true}
          touchOnChange={false}
        />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ReduxForm
    error={true}
    success={true}
  />,
}
`;

exports[`CreateNewKeyPair should match snapshots for various states of success and error 2`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Connect(Form(CreateNewKeyPair))
    destroyOnUnmount={true}
    enableReinitialize={false}
    error={false}
    forceUnregisterOnUnmount={false}
    form="CreateNewKeyPair"
    getFormState={[Function]}
    initialValues={undefined}
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldValidate={[Function]}
    success={true}
    touchOnBlur={true}
    touchOnChange={false}
  />,
  "nodes": Array [
    <Connect(Form(CreateNewKeyPair))
      destroyOnUnmount={true}
      enableReinitialize={false}
      error={false}
      forceUnregisterOnUnmount={false}
      form="CreateNewKeyPair"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      success={true}
      touchOnBlur={true}
      touchOnChange={false}
    />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ReduxForm
        error={false}
        success={true}
      />,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ReduxForm {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "error": false,
          "success": true,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Connect(Form(CreateNewKeyPair))
          destroyOnUnmount={true}
          enableReinitialize={false}
          error={false}
          forceUnregisterOnUnmount={false}
          form="CreateNewKeyPair"
          getFormState={[Function]}
          initialValues={undefined}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pure={true}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          success={true}
          touchOnBlur={true}
          touchOnChange={false}
        />,
        "_debugID": 6,
        "_renderedOutput": <Connect(Form(CreateNewKeyPair))
          destroyOnUnmount={true}
          enableReinitialize={false}
          error={false}
          forceUnregisterOnUnmount={false}
          form="CreateNewKeyPair"
          getFormState={[Function]}
          initialValues={undefined}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pure={true}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          success={true}
          touchOnBlur={true}
          touchOnChange={false}
        />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ReduxForm
    error={false}
    success={true}
  />,
}
`;

exports[`CreateNewKeyPair should match snapshots for various states of success and error 3`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Connect(Form(CreateNewKeyPair))
    destroyOnUnmount={true}
    enableReinitialize={false}
    error={true}
    forceUnregisterOnUnmount={false}
    form="CreateNewKeyPair"
    getFormState={[Function]}
    initialValues={undefined}
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldValidate={[Function]}
    success={false}
    touchOnBlur={true}
    touchOnChange={false}
  />,
  "nodes": Array [
    <Connect(Form(CreateNewKeyPair))
      destroyOnUnmount={true}
      enableReinitialize={false}
      error={true}
      forceUnregisterOnUnmount={false}
      form="CreateNewKeyPair"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      success={false}
      touchOnBlur={true}
      touchOnChange={false}
    />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ReduxForm
        error={true}
        success={false}
      />,
      "_debugID": 7,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ReduxForm {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "error": true,
          "success": false,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Connect(Form(CreateNewKeyPair))
          destroyOnUnmount={true}
          enableReinitialize={false}
          error={true}
          forceUnregisterOnUnmount={false}
          form="CreateNewKeyPair"
          getFormState={[Function]}
          initialValues={undefined}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pure={true}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          success={false}
          touchOnBlur={true}
          touchOnChange={false}
        />,
        "_debugID": 8,
        "_renderedOutput": <Connect(Form(CreateNewKeyPair))
          destroyOnUnmount={true}
          enableReinitialize={false}
          error={true}
          forceUnregisterOnUnmount={false}
          form="CreateNewKeyPair"
          getFormState={[Function]}
          initialValues={undefined}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pure={true}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          success={false}
          touchOnBlur={true}
          touchOnChange={false}
        />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ReduxForm
    error={true}
    success={false}
  />,
}
`;

exports[`CreateNewKeyPair should match snapshots for various states of success and error 4`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Connect(Form(CreateNewKeyPair))
    destroyOnUnmount={true}
    enableReinitialize={false}
    error={false}
    forceUnregisterOnUnmount={false}
    form="CreateNewKeyPair"
    getFormState={[Function]}
    initialValues={undefined}
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldValidate={[Function]}
    success={false}
    touchOnBlur={true}
    touchOnChange={false}
  />,
  "nodes": Array [
    <Connect(Form(CreateNewKeyPair))
      destroyOnUnmount={true}
      enableReinitialize={false}
      error={false}
      forceUnregisterOnUnmount={false}
      form="CreateNewKeyPair"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      success={false}
      touchOnBlur={true}
      touchOnChange={false}
    />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ReduxForm
        error={false}
        success={false}
      />,
      "_debugID": 9,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ReduxForm {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "error": false,
          "success": false,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 5,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Connect(Form(CreateNewKeyPair))
          destroyOnUnmount={true}
          enableReinitialize={false}
          error={false}
          forceUnregisterOnUnmount={false}
          form="CreateNewKeyPair"
          getFormState={[Function]}
          initialValues={undefined}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pure={true}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          success={false}
          touchOnBlur={true}
          touchOnChange={false}
        />,
        "_debugID": 10,
        "_renderedOutput": <Connect(Form(CreateNewKeyPair))
          destroyOnUnmount={true}
          enableReinitialize={false}
          error={false}
          forceUnregisterOnUnmount={false}
          form="CreateNewKeyPair"
          getFormState={[Function]}
          initialValues={undefined}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pure={true}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          success={false}
          touchOnBlur={true}
          touchOnChange={false}
        />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ReduxForm
    error={false}
    success={false}
  />,
}
`;
