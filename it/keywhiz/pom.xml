<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.walmartlabs.concord.it</groupId>
        <artifactId>parent</artifactId>
        <version>1.5.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>concord-keywhiz-it</artifactId>
    <packaging>takari-jar</packaging>

    <properties>
        <db.image>library/postgres</db.image>
        <server.image>walmartlabs/concord-server</server.image>
        <tmp.dir>${java.io.tmpdir}</tmp.dir>
        <network>net-keywhiz-it</network>
        <!-- TODO requires an OSS Docker image of Keywhiz -->
        <skip.it.tests>true</skip.it.tests>
        <keywhiz.image>n/a</keywhiz.image>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.walmartlabs.concord</groupId>
            <artifactId>concord-client</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.walmartlabs.concord.it</groupId>
            <artifactId>concord-common-it</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>${project.basedir}/src/test/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>io.takari.maven.plugins</groupId>
                <artifactId>takari-lifecycle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipTests>${skip.it.tests}</skipTests>
                    <environmentVariables>
                        <CONCORD_TMP_DIR>${tmp.dir}</CONCORD_TMP_DIR>
                        <IT_SERVER_PORT>${it.server.port}</IT_SERVER_PORT>
                        <KEYWHIZ_URL>https://keywhiz-node:4444</KEYWHIZ_URL>
                    </environmentVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>mac-os</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <tmp.dir>/tmp</tmp.dir>
            </properties>
        </profile>
        <profile>
            <id>docker</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skipRun>${skip.it.tests}</skipRun>
                            <showLogs>false</showLogs>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <images>
                                <image>
                                    <name>${keywhiz.image}</name>
                                    <alias>keywhiz</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>${network}</name>
                                            <alias>keywhiz-node</alias>
                                        </network>
                                        <env>
                                            <KEYWHIZ_CONFIG>/keywhiz/keywhiz-development-docker.yaml</KEYWHIZ_CONFIG>
                                        </env>
                                        <wait>
                                            <log>.*org.eclipse.jetty.server.Server: Started.*</log>
                                            <time>60000</time>
                                        </wait>
                                        <cmd>server</cmd>
                                        <volumes>
                                            <bind>
                                                <volume>${project.build.outputDirectory}/com/walmartlabs/concord/it/keywhiz/data:/keywhiz</volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </image>
                                <image>
                                    <name>${db.image}</name>
                                    <alias>db</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>${network}</name>
                                            <alias>db-node</alias>
                                        </network>
                                        <env>
                                            <POSTGRES_PASSWORD>it</POSTGRES_PASSWORD>
                                        </env>
                                        <wait>
                                            <log>(?s).*ready for start up.*ready to accept connections.*</log>
                                            <time>60000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>${server.image}</name>
                                    <alias>server</alias>
                                    <run>
                                        <ports>
                                            <port>
                                                it.server.port:8001
                                            </port>
                                        </ports>
                                        <network>
                                            <mode>custom</mode>
                                            <name>${network}</name>
                                            <alias>server-node</alias>
                                        </network>
                                        <env>
                                            <CONCORD_TMP_DIR>${tmp.dir}</CONCORD_TMP_DIR>
                                            <CONCORD_CFG_FILE>/keywhiz/server.conf</CONCORD_CFG_FILE>
                                            <DB_URL>jdbc:postgresql://db-node:5432/postgres</DB_URL>
                                            <DB_USERNAME>postgres</DB_USERNAME>
                                            <DB_PASSWORD>it</DB_PASSWORD>
                                            <DB_INVENTORY_USERNAME>postgres</DB_INVENTORY_USERNAME>
                                            <DB_INVENTORY_PASSWORD>it</DB_INVENTORY_PASSWORD>
                                            <KEYWHIZ_URL>https://keywhiz-node:4444</KEYWHIZ_URL>
                                        </env>
                                        <volumes>
                                            <bind>
                                                <volume>${project.build.outputDirectory}/com/walmartlabs/concord/it/keywhiz/data:/keywhiz</volume>
                                            </bind>
                                        </volumes>
                                        <wait>
                                            <http>
                                                <url>http://localhost:${it.server.port}/api/v1/server/ping</url>
                                            </http>
                                            <time>60000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
