<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.walmartlabs.concord.it</groupId>
        <artifactId>parent</artifactId>
        <version>0.99.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>concord-s3-it</artifactId>
    <packaging>takari-jar</packaging>

    <properties>
        <it.server.port>8001</it.server.port>
        <docker.host.addr>localhost</docker.host.addr>
        <db.image>library/postgres</db.image>
        <server.image>walmartlabs/concord-server</server.image>
        <agent.image>walmartlabs/concord-agent</agent.image>
        <docker.daemon.addr>tcp://127.0.0.1:2375</docker.daemon.addr>
        <s3mock.image>adobe/s3mock</s3mock.image>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.walmartlabs.concord</groupId>
            <artifactId>concord-client</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>concord-common-it</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.walmartlabs.concord</groupId>
            <artifactId>concord-sdk</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipTests>${skip.it.tests}</skipTests>
                    <environmentVariables>
                        <CONCORD_TMP_DIR>${java.io.tmpdir}</CONCORD_TMP_DIR>
                        <IT_SERVER_PORT>${it.server.port}</IT_SERVER_PORT>
                        <IT_DOCKER_HOST_ADDR>${docker.host.addr}</IT_DOCKER_HOST_ADDR>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-ports</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <configuration>
                            <portNames>
                                <portName>it.s3.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skipRun>${skip.it.tests}</skipRun>
                            <images>
                                <image>
                                    <name>${s3mock.image}</name>
                                    <alias>s3mock</alias>
                                    <run>
                                        <ports>
                                            <port>it.s3.port:9090</port>
                                        </ports>
                                    </run>
                                </image>
                                <image>
                                    <name>${db.image}</name>
                                    <alias>db</alias>
                                    <run>
                                        <ports>
                                            <port>it.db.port:5432</port>
                                        </ports>
                                        <env>
                                            <POSTGRES_PASSWORD>it</POSTGRES_PASSWORD>
                                        </env>
                                        <wait>
                                            <log>(?s).*ready for start up.*ready to accept connections.*</log>
                                            <time>60000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>${server.image}</name>
                                    <alias>server</alias>
                                    <run>
                                        <network>
                                            <mode>host</mode>
                                        </network>
                                        <volumes>
                                            <bind>
                                                <volume>/tmp:/tmp</volume>
                                                <volume>${settings.localRepository}:/home/concord/.m2/repository:ro</volume>
                                                <volume>${basedir}/src/test/resources/server.conf:/opt/concord/conf/server.conf:ro</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <CONCORD_CFG_FILE>/opt/concord/conf/server.conf</CONCORD_CFG_FILE>
                                            <CONCORD_TMP_DIR>${java.io.tmpdir}</CONCORD_TMP_DIR>
                                            <DB_URL>jdbc:postgresql://localhost:${it.db.port}/postgres</DB_URL>
                                            <DB_USERNAME>postgres</DB_USERNAME>
                                            <DB_PASSWORD>it</DB_PASSWORD>
                                            <DB_INVENTORY_USERNAME>postgres</DB_INVENTORY_USERNAME>
                                            <DB_INVENTORY_PASSWORD>it</DB_INVENTORY_PASSWORD>
                                            <S3_URL>http://localhost:${it.s3.port}</S3_URL>
                                        </env>
                                        <wait>
                                            <!--suppress MavenModelInspection -->
                                            <http>
                                                <url>http://localhost:${it.server.port}/api/v1/server/ping</url>
                                            </http>
                                            <time>60000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>${agent.image}</name>
                                    <alias>agent</alias>
                                    <run>
                                        <network>
                                            <mode>host</mode>
                                        </network>
                                        <volumes>
                                            <bind>
                                                <volume>/tmp:/tmp</volume>
                                                <volume>${settings.localRepository}:/home/concord/.m2/repository:ro
                                                </volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <CONCORD_DOCKER_LOCAL_MODE>false</CONCORD_DOCKER_LOCAL_MODE>
                                            <CONCORD_TMP_DIR>${java.io.tmpdir}</CONCORD_TMP_DIR>
                                            <DOCKER_HOST>${docker.daemon.addr}</DOCKER_HOST>
                                            <QUEUE_POLL_INTERVAL>500</QUEUE_POLL_INTERVAL>
                                            <SERVER_API_BASE_URL>http://localhost:${it.server.port}</SERVER_API_BASE_URL>
                                            <WORKERS_COUNT>3</WORKERS_COUNT>
                                        </env>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>walmart</id>
            <properties>
                <db.image>hub.docker.prod.walmart.com/library/postgres:10.4-alpine</db.image>
                <server.image>docker.prod.walmart.com/walmartlabs/concord-server</server.image>
                <agent.image>docker.prod.walmart.com/walmartlabs/concord-agent</agent.image>
            </properties>
        </profile>
    </profiles>
</project>