envs:
  global:
    variables:
      MVN_SETTINGS: .looper/settings.xml
      DEPLOYMENT_USERNAME: "%{credentials.username('walmart-deployment')}"
      DEPLOYMENT_PASSWORD: "%{credentials.password('walmart-deployment')}"

      # until we will be able to run docker images from mvn directly on a looper's slave
      CI_DB_HOST: "docker.dev.concord-ci.devtools.prod.walmart.com"
      CI_DB_USERNAME: "%{credentials.username('concordCiDb')}"
      CI_DB_PASSWORD: "%{credentials.password('concordCiDb')}"
      DOCKER_HOST: "tcp://docker.dev.concord-ci.devtools.prod.walmart.com:2375"
      DOCKER_API_VERSION: "1.22"

      CONCORD_API_TOKEN: ENC[T1dy4zsvOVkdoDbFyimDBAAa64/OPXdb04rMfaIHfyY=]
      CONCORD_SECRET_PWD: ENC[kEzaZJe5TNNs02USeRjxvQ==]

tools:
  jdk: 8
  maven: 3.5.0

docker:
  - name: "concord-looper-agent"
    image: "docker.prod.walmart.com/walmartlabs/concord-looper-agent:latest"
tools:
  jdk: 8
  maven: 3.5.0

flows:
  buildImages:
    - dockerImage:
        dockerfile: "docker-images/base/walmart/Dockerfile"
        tags:
          - "docker.prod.walmart.com/walmartlabs/concord-base:${concord_version}"
        push: true
    - dockerImage:
        dockerfile: "docker-images/ansible/walmart/Dockerfile"
        tags:
          - "docker.prod.walmart.com/walmartlabs/concord-ansible:${concord_version}"
        buildArgs:
          concord_version: ${concord_version}
        push: true
    - dockerImage:
        dockerfile: "docker-images/server/walmart/Dockerfile"
        tags:
          - "docker.prod.walmart.com/walmartlabs/concord-server:${concord_version}"
        buildArgs:
          concord_version: ${concord_version}
        push: true
    - dockerImage:
        dockerfile: "docker-images/console/walmart/Dockerfile"
        tags:
          - "docker.prod.walmart.com/walmartlabs/concord-console:${concord_version}"
        buildArgs:
          concord_version: ${concord_version}
        push: true
    - dockerImage:
        dockerfile: "docker-images/agent/walmart/Dockerfile"
        tags:
          - "docker.prod.walmart.com/walmartlabs/concord-agent:${concord_version}"
        buildArgs:
          concord_version: ${concord_version}
        push: true

  build:
    - node(docker-daemon):
      - dockerAgent(concord-looper-agent):
        - call: cleanup
        - (name build) mvn -U -B -s $MVN_SETTINGS clean install -DskipTests
        - ws_snapshot: binaries
      - ws_restore: binaries
      - call: buildImages

  cleanup:
    - (name cleanup) docker rm -f $(docker ps -aq) &> /dev/null || true

  deploy:
    - concord.start:
        apiUrl: http://server.ci-driver.concord-dev.devtools.prod.walmart.com:8001/api/v1
        apiKey: ${CONCORD_API_TOKEN}
        org: "Default"
        project: "concord"
        repo: "default"
        entryPoint: "fullAuto"
        activeProfiles:
        - "test"
        sync: false
        arguments:
          auto:
            nextVersion: ${concord_version}
            secretPwd: ${CONCORD_SECRET_PWD}

  default:
    - call: build(concord_version = latest-master-looper)
#    - call: deploy(concord_version = latest-master-looper)

  pr:
    - call: build(concord_version = latest-pr-looper)
#    - call: deploy(concord_version = latest-pr-looper)

  release(ui Perform a release):
    - mvn -U -B -s $MVN_SETTINGS release:prepare release:perform
    - var(RELEASE_VERSION = '%{MAVEN_VERSION.replace("-SNAPSHOT", "")}')
    - call: buildImages(concord_version = ${RELEASE_VERSION})
#    - call: deploy(concord_version = ${RELEASE_VERSION})