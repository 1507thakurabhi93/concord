language: workflow

envs:
  global:
    variables:
      MVN_SETTINGS: .looper/settings.xml
      DEPLOYMENT_USERNAME: "%{credentials.username('walmart-deployment')}"
      DEPLOYMENT_PASSWORD: "%{credentials.password('walmart-deployment')}"

      # until we will be able to run docker images from mvn directly on a looper's slave
      CI_DB_HOST: "docker.dev.concord-ci.devtools.prod.walmart.com"
      CI_DB_USERNAME: "%{credentials.username('concordCiDb')}"
      CI_DB_PASSWORD: "%{credentials.password('concordCiDb')}"
      DOCKER_HOST: "tcp://docker.dev.concord-ci.devtools.prod.walmart.com:2375"
      DOCKER_API_VERSION: "1.22"

tools:
  jdk: 8
  maven: 3.5.0

docker:
  - name: "concord-looper-agent"
    image: "docker.prod.walmart.com/walmartlabs/concord-looper-agent:latest"

flows:
  build:
    - node(docker-daemon):
      - dockerAgent(concord-looper-agent):
        - call: cleanup
        - (name build) mvn -U -B -s $MVN_SETTINGS clean install -DskipTests
        - ws_snapshot: binaries
      - ws_restore: binaries
      - dockerImage:
          dockerfile: "docker-images/base/walmart/Dockerfile"
          tags:
            - "walmartlabs/concord-base:latest"
            - "walmartlabs/concord-base:latest-snapshot"
          push: false
      - dockerImage:
          dockerfile: "docker-images/server/Dockerfile"
          tags:
            - "walmartlabs/concord-server:latest"
            - "walmartlabs/concord-base:latest-snapshot"
          push: false

  cleanup:
    - (name cleanup) docker rm -f $(docker ps -aq) &> /dev/null || true

  default:
    - call: build

  pr:
    - call: build
