---
boo:
  oneops_host: '{{host}}'
  organization: '{{organization}}'
  api_key: '{{apiKey}}'
  email: '{{email}}'
  environment_name: '{{environmentName}}'
  ip_output: 'json'

assembly:
  name: '{{assemblyName}}'
  auto_gen: false

platforms:
  db:
    pack: oneops/postgresql
    pack_version: '1'
    components:
      os:
        ostype: "centos-7.3"
        repo_list: '["yum-config-manager --add-repo http://repos.walmart.com/mirrored-assets/postgressql/9.6/rhel7/ ; echo gpgcheck=0 >> /etc/yum.repos.d/repos.walmart.com_mirrored-assets_postgressql_9.6_rhel7_.repo"]'
      compute:
        size: 'M'
      database:
        dbname: 'concord'
        username: 'sa'
        password: 'c0nc0rdDb'
      postgresql:
        version: '9.6'
        port: '5432'
      lb:
        listeners: '["tcp 5432 tcp 5432"]'
        lbmethod: 'roundrobin' 
        ecv_map: '{"5432" : "GET /notused"}' 
      secgroup:
        inbound: '[
          "22 22 tcp 0.0.0.0/0",
          "8080 8080 tcp 0.0.0.0/0",
          "5432 5432 tcp 0.0.0.0/0"
        ]'
      user:
        user-app:
          system_account: true
          sudoer: true
          username: 'app'
          description: "Application user"
          authorized_keys: '["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFo5HbpjfqZOg1DgVavWO1JwTZPsC4iLfk6Mxuh3GYqEIULzBxdYUzqAnMbFegGWODxmFNkIRMMcQcy56U1mf57gkmiPoeFLgpUeKrlBaX6i8PNnxvh0Gne2DXx5aPoYOV5ueLQMwB0D3KKeSXgvKf1eow82MDOFDv4inDvFoHLKDUen2IMX9xFqOX+CtGBAHstfbwiGTekOSut+NhaHQiALcHt1kNq5p4NoQSiDHQTIK+Zq4kE9UlQp3R5YvInBy0+lXoUykIUjI45LoYk6WzqryXuWZQDGSCK0vYODvRXWg6hIlWfcn1T7Z4u4AOwDd8cERGZqeiDVBsG7XZuW1/ jpise@walmartlabs.com"]'
      fqdn:
         aliases: ["concorddb"]
          
  agent:
    pack: oneops/docker
    pack_version: '1'
    variables:
      docker-repo: '{{dockerRepo}}'
      docker-root: '{{dockerRoot}}'
      data-volume: '{{dataVolume}}'
    components:
      file:
        docker-script:
                content: |
                        docker pull docker.prod.walmart.com/walmartlabs/concord-agent
                        docker rm -f agent
                        docker run -d -p 8002:8002 -v /tmp:/tmp --name agent docker.prod.walmart.com/walmartlabs/concord-agent
                path: '{{dataVolume}}/docker-script.sh'
                exec_cmd: 'sudo chmod 755 /data/docker-script.sh; sudo /data/docker-script.sh'

      user:
        user-app:
          system_account: true
          sudoer: true
          username: 'app'
          description: "Application user"
          authorized_keys: '["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFo5HbpjfqZOg1DgVavWO1JwTZPsC4iLfk6Mxuh3GYqEIULzBxdYUzqAnMbFegGWODxmFNkIRMMcQcy56U1mf57gkmiPoeFLgpUeKrlBaX6i8PNnxvh0Gne2DXx5aPoYOV5ueLQMwB0D3KKeSXgvKf1eow82MDOFDv4inDvFoHLKDUen2IMX9xFqOX+CtGBAHstfbwiGTekOSut+NhaHQiALcHt1kNq5p4NoQSiDHQTIK+Zq4kE9UlQp3R5YvInBy0+lXoUykIUjI45LoYk6WzqryXuWZQDGSCK0vYODvRXWg6hIlWfcn1T7Z4u4AOwDd8cERGZqeiDVBsG7XZuW1/ jpise@walmartlabs.com"]'

      secgroup:
        inbound: '[
          "22 22 tcp 0.0.0.0/0",
          "8080 8080 tcp 0.0.0.0/0",
          "8081 8081 tcp 0.0.0.0/0",
          "8002 8002 tcp 0.0.0.0/0"
        ]'

  server:
    pack: oneops/docker
    pack_version: '1'
    variables:
      docker-repo: '{{dockerRepo}}'
      docker-root: '{{dockerRoot}}'
      data-volume: '{{dataVolume}}'
    components:
      file:
         ldap-conf:
                content: |
                        url=ldap://honts0102.homeoffice.wal-mart.com:389
                        searchBase=DC=homeoffice,DC=Wal-Mart,DC=com
                        principalSuffix=@homeoffice.wal-mart.com
                        systemUsername='{{ldapUserName}}' #gec-svcmaven
                        systemPassword='{{ldapPassword}}' #Maven123
                path: '{{dataVolume}}/conf/ldap.properties'
             
         docker-script:
                content: |

                        docker pull docker.prod.walmart.com/walmartlabs/concord-server
                        docker pull docker.prod.walmart.com/walmartlabs/concord-console

                        docker rm -f server console

                        docker run -d -p 8001:8001 \
                        --name server \
                        -v /mnt/concord:/data \
                        -v /tmp:/tmp \
                        docker pull docker.prod.walmart.com/walmartlabs/concord-server
                        docker pull docker.prod.walmart.com/walmartlabs/concord-console

                        docker rm -f server console

                        docker run -d -p 8001:8001 \
                        --name server \
                        -v /data:/opt/concord/data \
                        -v /tmp:/tmp \
                        -e 'AGENT_URL=http://agent:8002' \
                        -e 'DB_URL=jdbc:postgresql://db:5432/concord' \
                        -e 'DB_DIALECT=POSTGRES' \
                        -e 'DB_DRIVER=org.postgresql.Driver' \
                        -e 'DB_USERNAME=sa' \
                        -e 'DB_PASSWORD=c0nc0rdDb' \
                        -e 'LDAP_CFG=/opt/concord/data/conf/ldap.properties' \
                        -e 'LOG_STORE_DIR=/opt/concord/data/logs' \
                        -e 'ATTACHMENT_STORE_DIR=/opt/concord/data/attachments' \
                        docker.prod.walmart.com/walmartlabs/concord-server

                        docker run -d -p 8080:8080 \
                        --name console \
                        -v /data/concord/console/landing:/data/console/landing:ro \
                        --link server \
                        docker.prod.walmart.com/walmartlabs/concord-console


                path: '/data/docker-script.sh'
                exec_cmd: 'sudo chmod 755 /data/docker-script.sh; sudo /data/docker-script.sh'
      
      storage:
        storage:
          size: "20G"
          volume_type: "STANDARD1"

      volume:
        vol-docker:
          size: "20%FREE"
                  
      user:
        user-app:
          system_account: true
          sudoer: true
          username: 'app'
          description: "Application user"
          authorized_keys: '["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFo5HbpjfqZOg1DgVavWO1JwTZPsC4iLfk6Mxuh3GYqEIULzBxdYUzqAnMbFegGWODxmFNkIRMMcQcy56U1mf57gkmiPoeFLgpUeKrlBaX6i8PNnxvh0Gne2DXx5aPoYOV5ueLQMwB0D3KKeSXgvKf1eow82MDOFDv4inDvFoHLKDUen2IMX9xFqOX+CtGBAHstfbwiGTekOSut+NhaHQiALcHt1kNq5p4NoQSiDHQTIK+Zq4kE9UlQp3R5YvInBy0+lXoUykIUjI45LoYk6WzqryXuWZQDGSCK0vYODvRXWg6hIlWfcn1T7Z4u4AOwDd8cERGZqeiDVBsG7XZuW1/ jpise@walmartlabs.com"]'
      secgroup:
        inbound: '[
          "22 22 tcp 0.0.0.0/0",
          "8080 8080 tcp 0.0.0.0/0",
          "8081 8081 tcp 0.0.0.0/0",
          "8001 8001 tcp 0.0.0.0/0"
        ]'
#scale:
#  server:
#    scaling:
#      compute:
#        min: '1'
#        max: '1'
#        current: '1'
#  agent:
#    scaling:
#      compute:
#        min: '1'
#        max: '1'
#        current: '1'

environment:
  global_dns: true
  subdomain: '{{environmentName}}.{{assemblyName}}.{{organization}}' # environment_name.assembly_name
  availability: Reduandant 
  profile: 'PROD'
  debug: false
  autoscale: false
  autorepair: false
  autoreplace: false
  platforms:
    server:
      availability: Single
    db:
      availability: Redundant
    agent:
      availability: Single
  clouds:
    qa-dfw1:
      priority: '1'
      dpmt_order: '1'
      pct_scale: '100'
    stg-dal2:
      priority: '2'
      adminstatus: 'offline'
      dpmt_order: '1'
      pct_scale: '100'

